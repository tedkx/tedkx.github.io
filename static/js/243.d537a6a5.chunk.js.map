{"version":3,"file":"static/js/243.d537a6a5.chunk.js","mappings":"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","sources":["lib/utils.js","routes/MidiSequencer/tunes.js","routes/MidiSequencer/constants.js","routes/MidiSequencer/utils.js","components/KeyboardComponents/Button.js","components/KeyboardComponents/Pad.js","components/KeyboardComponents/RotaryKnob.js","components/KeyboardComponents/ParameterKnob.js","routes/MidiSequencer/GlobalControl/index.js","routes/MidiSequencer/StepSequencer/MidiChannelsSelector.js","routes/MidiSequencer/StepSequencer/SequenceLengthModifier.js","routes/MidiSequencer/StepSequencer/index.js","routes/MidiSequencer/index.js"],"sourcesContent":["import { noteOnStart, noteOffStart, numOfChannels, notes } from './constants';\r\n\r\nconst noteToString = number => {\r\n  const octave = Math.floor(number / notes.length);\r\n  const note = number % notes.length;\r\n  return `${notes[note]}${octave}`;\r\n};\r\n\r\nconst noteToMidi = str => {\r\n  const [_, note, octave] = (str || '').match(/(.{1,2})(\\d{1})/) || [];\r\n  return !note || !octave\r\n    ? null\r\n    : parseInt(octave) * notes.length +\r\n        notes.findIndex(n => n === note.toUpperCase());\r\n};\r\n\r\n// check for noteOn number\r\nconst isNoteOn = midiMessage =>\r\n  midiMessage[0] >= noteOnStart &&\r\n  midiMessage[0] <= noteOnStart + numOfChannels &&\r\n  midiMessage[2] > 0;\r\n\r\n// either noteOff number or noteOn and velocity is 0\r\nconst isNoteOff = midiMessage =>\r\n  (midiMessage[0] >= noteOffStart &&\r\n    midiMessage[0] <= noteOffStart + numOfChannels) ||\r\n  (midiMessage[0] >= noteOnStart &&\r\n    midiMessage[0] <= noteOnStart + numOfChannels &&\r\n    midiMessage[2] === 0);\r\n\r\nexport { isNoteOn, isNoteOff, noteToMidi, noteToString };\r\n","const tunez = {\r\n  //lazerhawk's lawless\r\n  lawless: {\r\n    bpm: 90,\r\n    stepSequencers: [\r\n      {\r\n        channels: [1],\r\n        noteDuration: 30,\r\n        notes:\r\n          'C4 G4 C5 D#5 D5 C5 D5 D#5 G5 D#5 D5 C5 G4 F4 D#4 D4 C6 C6 C6 C5 C5 C5 C6 C6 C6 G5 D#5 D5 C5 G4 D#4 D4',\r\n      },\r\n    ],\r\n    noteValue: 16,\r\n  },\r\n\r\n  // tigran hamasyan's the grid intro\r\n  theGrid: {\r\n    bpm: 138,\r\n    stepSequencers: [\r\n      {\r\n        channels: [1, 2, 3, 4],\r\n        noteDuration: 100,\r\n        notes:\r\n          'G3 D4 G4 C5 D5 D#4 G4 A#4 D#5 F5 B3 G4 G#4 D5 D#5 F5 G5 G3 D4 G4 C5 D5 F4 G4 A#4 D#5 F5 C4 G4 G#4 D5 D#5',\r\n      },\r\n    ],\r\n    noteValue: 16,\r\n  },\r\n\r\n  // tigran hamasyan's new maps\r\n  newMaps: {\r\n    bpm: 120,\r\n    stepSequencers: [\r\n      {\r\n        channels: [1, 2, 3, 4],\r\n        noteDuration: 600,\r\n        notes:\r\n          'C5 A#4 C5 G#5:90 C#5 G#4 D#5 C5 A#4 G#5:90 C5 G#4 C#5 D#5 A#4 C5 G#5:90 G#5:0 C5 A#4 C5 G#5 C5 A#4 C5 G#5:90 C#5 G#4 D#5 C5 A#4 G5:90 C5 G#4 C#5 D#5 A#4 C#5 A#5:90 A#5:0 C5 A#4 C5 G#5:90 C#5 G#4 D#5 C5 A#4 G#5:90 C5 G#4 C#5 D#5 A#4 C5 G#5:90 G#5:0 C5 A#4 C5 G#5 C5 A#4 C5 G#5:90 C#5 G#4 D#5 C5 A#4 G5:90 A#4 G#4 C#5 D#5 A#4 C#5 C6:90 C6:0',\r\n      },\r\n    ],\r\n    noteValue: 16,\r\n    velocity: 54,\r\n  },\r\n\r\n  // dream theater's metropolis mid keyboard part\r\n  metropolis: {\r\n    bpm: 120,\r\n    noteValue: 16,\r\n    stepSequencers: [\r\n      {\r\n        channels: [1],\r\n        noteDuration: 100,\r\n        notes: 'C5 G5 D6 C7 B6 F6 E5 B5 F#6 F7 E7 A#6 D7 C#7 A6 C7 B6 G#6',\r\n      },\r\n      {\r\n        channels: [1],\r\n        noteDuration: 100,\r\n        notes: 'F5 C6 G6 F7 E7 A#6 A5 E6 B6 A#7 A7 D#7 G7 F#7 D7 F7 E7 C#7',\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport default tunez;\r\n","import { noteToMidi } from 'lib/utils';\r\nimport tunes from './tunes';\r\n\r\nconst defaultVelocity = 64;\r\nconst defaultNote = noteToMidi('C5');\r\nconst defaultPatternLength = 16;\r\nconst maxSequencerNotes = 120;\r\n\r\nconst createParameter = (min, max, defaultValue, title, centerBased) => ({\r\n  centerBased: centerBased === true,\r\n  defaultValue,\r\n  max,\r\n  min,\r\n  title,\r\n});\r\n\r\nconst formatPattern = ({ stepSequencers, ...pattern }) => ({\r\n  ...pattern,\r\n  stepSequencers: stepSequencers.map(({ notes, ...stepSequencer }) => ({\r\n    ...stepSequencer,\r\n    transpose: 0,\r\n    notes: notes.split(' ').map(item => {\r\n      const [note, velocityStr] = item.split(':');\r\n      const velocity = parseInt(velocityStr);\r\n      return {\r\n        note: noteToMidi(note),\r\n        on: velocity !== 0,\r\n        velocity: isNaN(velocity)\r\n          ? pattern.velocity || defaultVelocity\r\n          : velocity,\r\n      };\r\n    }),\r\n  })),\r\n});\r\n\r\nconst defaultPattern = formatPattern(tunes.metropolis);\r\n\r\nconst sequencerParameterData = {\r\n  noteDuration: createParameter(\r\n    1,\r\n    1000,\r\n    defaultPattern.noteDuration,\r\n    'Note Duration'\r\n  ),\r\n  transpose: createParameter(-24, 24, 0, 'Transpose', true),\r\n};\r\n\r\nconst globalParameterData = {\r\n  bpm: createParameter(40, 280, defaultPattern.bpm, 'Tempo'),\r\n  noteValue: createParameter(1, 32, defaultPattern.noteValue, 'NoteValue'),\r\n};\r\n\r\nexport {\r\n  defaultNote,\r\n  defaultPattern,\r\n  defaultPatternLength,\r\n  defaultVelocity,\r\n  globalParameterData,\r\n  maxSequencerNotes,\r\n  sequencerParameterData,\r\n};\r\n","import React from 'react';\r\nimport MidiContext from 'components/Midi/Context';\r\nimport { MidiMessages } from 'lib/enums';\r\nimport { defaultNote, defaultVelocity } from './constants';\r\n\r\nconst getIntervalMillis = (bpm, noteValue) => ((60000 / bpm) * 4) / noteValue;\r\n\r\nconst stepSequencerDataToSteps = stepSequencersData => {\r\n  if (!Array.isArray(stepSequencersData)) return [];\r\n\r\n  let stepsLength = stepSequencersData[0].notes.length;\r\n  for (let i = 0; i < stepSequencersData.length; i++)\r\n    if (stepSequencersData[i].length > stepsLength)\r\n      stepsLength = stepSequencersData[i].length;\r\n\r\n  return Array.from(Array(stepsLength)).map((_, idx) =>\r\n    stepSequencersData.map(({ channels, notes, noteDuration, transpose }) => ({\r\n      channels,\r\n      duration: noteDuration,\r\n      note: notes[idx].note + transpose,\r\n      on: notes[idx].on,\r\n      velocity: notes[idx].velocity,\r\n    }))\r\n  );\r\n};\r\n\r\nconst createNote = (\r\n  note = defaultNote,\r\n  velocity = defaultVelocity,\r\n  on = true\r\n) => ({\r\n  note,\r\n  on,\r\n  velocity,\r\n});\r\n\r\nconst usePadEvents = setPadData => {\r\n  const onClick = React.useCallback(\r\n    padIndex =>\r\n      setPadData(({ notes, ...pd }) => ({\r\n        ...pd,\r\n        notes: notes.map((item, idx) =>\r\n          idx === padIndex ? { ...item, on: !item.on } : item\r\n        ),\r\n      })),\r\n    [setPadData]\r\n  );\r\n\r\n  const onWheel = React.useCallback(\r\n    (padIndex, direction) =>\r\n      setPadData(({ notes, ...pd }) => ({\r\n        ...pd,\r\n        notes: notes.map((item, idx) =>\r\n          idx === padIndex\r\n            ? {\r\n                ...item,\r\n                note: direction === 'up' ? item.note + 1 : item.note - 1,\r\n              }\r\n            : item\r\n        ),\r\n      })),\r\n    [setPadData]\r\n  );\r\n\r\n  return {\r\n    onClick,\r\n    onWheel,\r\n  };\r\n};\r\n\r\nconst useNotesPlaying = (\r\n  { bpm, noteValue, ...parameters },\r\n  stepSequencersData,\r\n  autostart\r\n) => {\r\n  const midiContext = React.useContext(MidiContext);\r\n  const { selectedOutput } = midiContext;\r\n\r\n  const [activeNoteIdx, setActiveNoteIdx] = React.useState(null);\r\n\r\n  // keep almmost every param in ref so that they can be pick by interval callback playNote\r\n  const ref = React.useRef({\r\n    ...parameters,\r\n    intervalId: null,\r\n    intervalMillis: getIntervalMillis(bpm, noteValue),\r\n    noteIdx: 0,\r\n    steps: stepSequencerDataToSteps(stepSequencersData),\r\n    tempoChangeRequested: null,\r\n  });\r\n\r\n  // if interval active, store new bpm to tempoChangeRequested\r\n  // it will be reset by the next playNote tick\r\n  React.useEffect(() => {\r\n    if (ref.current.intervalId !== null)\r\n      ref.current.tempoChangeRequested = getIntervalMillis(bpm, noteValue);\r\n    else ref.current.intervalMillis = getIntervalMillis(bpm, noteValue);\r\n  }, [bpm, noteValue]);\r\n\r\n  // update ref with the latest parameter values as they change\r\n  React.useEffect(() => {\r\n    Object.keys(parameters).forEach(key => {\r\n      ref.current[key] = parameters[key];\r\n    });\r\n  }, [parameters]);\r\n\r\n  // same for notes\r\n  React.useEffect(() => {\r\n    ref.current.steps = stepSequencerDataToSteps(stepSequencersData);\r\n  }, [stepSequencersData]);\r\n\r\n  // the interval callback where all the interesting stuff take place\r\n  const playNote = React.useCallback(() => {\r\n    const { steps, noteIdx, tempoChangeRequested } = ref.current;\r\n\r\n    // pending temp change. set intervalMillis, reset tempoChangeRequested and restart interval\r\n    if (tempoChangeRequested) {\r\n      clearInterval(ref.current.intervalId);\r\n      ref.current.intervalMillis = tempoChangeRequested;\r\n      ref.current.tempoChangeRequested = null;\r\n      ref.current.intervalId = setInterval(playNote, tempoChangeRequested);\r\n    }\r\n\r\n    const stepData = steps[noteIdx];\r\n    setActiveNoteIdx(noteIdx);\r\n\r\n    ref.current.noteIdx++;\r\n    if (ref.current.noteIdx >= steps.length) ref.current.noteIdx = 0;\r\n\r\n    // pad is not on, no sound required\r\n    const { messages, messagesOffGroups } = stepData.reduce(\r\n      (obj, { channels, duration, note, on, velocity }) => {\r\n        if (on && velocity > 0)\r\n          channels.forEach(channel => {\r\n            obj.messages.push([\r\n              MidiMessages[`Channel${channel}NoteOn`],\r\n              note,\r\n              velocity,\r\n            ]);\r\n            if (!obj.messagesOffGroups[duration])\r\n              obj.messagesOffGroups[duration] = [];\r\n            obj.messagesOffGroups[duration].push([\r\n              MidiMessages[`Channel${channel}NoteOn`],\r\n              note,\r\n              0,\r\n            ]);\r\n          });\r\n\r\n        return obj;\r\n      },\r\n      { messages: [], messagesOffGroups: {} }\r\n    );\r\n\r\n    if (!messages.length) return;\r\n\r\n    messages.forEach(message => selectedOutput.send(message));\r\n    Object.keys(messagesOffGroups).forEach(duration => {\r\n      const messagesOff = messagesOffGroups[duration];\r\n      setTimeout(\r\n        () =>\r\n          messagesOff.forEach(messageOff => selectedOutput.send(messageOff)),\r\n        duration\r\n      );\r\n    });\r\n  }, [selectedOutput]);\r\n\r\n  // auto begin playing\r\n  React.useEffect(() => {\r\n    if (autostart && midiContext?.ready && midiContext.selectedOutput)\r\n      ref.current.intervalId = setInterval(playNote, intervalMillis);\r\n\r\n    return () => {\r\n      clearInterval(ref.current.intervalId);\r\n      ref.current.intervalId = null;\r\n    };\r\n  }, [autostart]);\r\n\r\n  // start/stop/seek to start button callbacks\r\n  const onSeekToStart = React.useCallback(() => {\r\n    setActiveNoteIdx(0);\r\n    ref.current.noteIdx = 0;\r\n  }, [setActiveNoteIdx]);\r\n\r\n  const onPlay = React.useCallback(() => {\r\n    if (ref.current.intervalId === null)\r\n      ref.current.intervalId = setInterval(\r\n        playNote,\r\n        ref.current.intervalMillis\r\n      );\r\n  }, [playNote]);\r\n\r\n  const onStop = React.useCallback(() => {\r\n    clearInterval(ref.current.intervalId);\r\n    ref.current.intervalId = null;\r\n  }, []);\r\n\r\n  return {\r\n    activeNoteIdx,\r\n    onPlay,\r\n    onSeekToStart,\r\n    onStop,\r\n  };\r\n};\r\n\r\nconst useParameters = (parametersArr, parameterValues = {}) => {\r\n  const [parameters, setParameters] = React.useState(\r\n    parametersArr.reduce((obj, parameterData) => {\r\n      obj[parameterData.name] =\r\n        parameterValues[parameterData.name] || parameterData.defaultValue;\r\n      return obj;\r\n    }, {})\r\n  );\r\n\r\n  const onSetParameter = React.useCallback(\r\n    (name, value) =>\r\n      setParameters(curr => ({\r\n        ...curr,\r\n        [name]: value,\r\n      })),\r\n    []\r\n  );\r\n\r\n  return {\r\n    onSetParameter,\r\n    parameters,\r\n  };\r\n};\r\n\r\nexport { createNote, useNotesPlaying, useParameters, usePadEvents };\r\n","import React from 'react';\r\n\r\nconst Button = ({ children, className, index, onClick, ...props }) => {\r\n  return (\r\n    <div\r\n      className={`keyboard-button ${className}`}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      <div className=\"button-overlay\"></div>\r\n      <div className=\"button-inner\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Pad = ({\r\n  active,\r\n  children,\r\n  className,\r\n  index,\r\n  on,\r\n  onClick,\r\n  onWheel,\r\n  ...props\r\n}) => {\r\n  const handleClick = React.useCallback(\r\n    e => {\r\n      if (onClick) onClick(index, on, e);\r\n    },\r\n    [index, on, onClick]\r\n  );\r\n\r\n  const handleWheel = React.useCallback(\r\n    e => {\r\n      if (onWheel) onWheel(index, e.deltaY < 0 ? 'up' : 'down', e);\r\n    },\r\n    [index, onWheel]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`keyboard-pad ${className} ${active && 'active'} ${\r\n        on && 'on'\r\n      }`}\r\n      onClick={handleClick}\r\n      onWheel={handleWheel}\r\n      {...props}\r\n    >\r\n      <div className=\"pad-overlay\"></div>\r\n      <div className=\"pad-inner\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pad;\r\n","import React from 'react';\r\nimport { debounce } from 'lodash';\r\n\r\nconst minAngle = -144;\r\nconst maxAngle = 144;\r\nconst tickAngleDiff = 12;\r\n\r\nconst angleScale = maxAngle - minAngle;\r\nconst numOfTicks = angleScale / tickAngleDiff;\r\nconst defaultStep = 1;\r\n\r\nconst convertToKnobAngle = (value, min, max) => {\r\n  const knobValue = ((value - min) * angleScale) / (max - min) + minAngle;\r\n  return Math.max(minAngle, Math.min(maxAngle, knobValue));\r\n};\r\n\r\nconst getTickProps = (tickIndex, angle, centerBased) => {\r\n  const tickAngle = minAngle + tickAngleDiff * tickIndex;\r\n  const active = !centerBased\r\n    ? angle > minAngle && tickAngle <= angle\r\n    : angle < 0\r\n    ? tickAngle <= 0 && tickAngle >= angle\r\n    : tickAngle >= 0 && tickAngle <= angle;\r\n\r\n  return {\r\n    className: `tick ${active && 'active'}`,\r\n    key: tickIndex,\r\n    style: {\r\n      transform: `rotate(${tickAngle}deg)`,\r\n    },\r\n  };\r\n};\r\n\r\nconst useWheelValueChanging = ({\r\n  max,\r\n  min,\r\n  onSetValue,\r\n  step = defaultStep,\r\n  value,\r\n}) => {\r\n  const ref = React.useRef({\r\n    factor: 1,\r\n    max,\r\n    min,\r\n    step,\r\n    value,\r\n  });\r\n  const elementRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    ref.current.step = step;\r\n    ref.current.value = value;\r\n    ref.current.min = min;\r\n    ref.current.max = max;\r\n  }, [value, step, min, max]);\r\n\r\n  const resetFactor = React.useMemo(\r\n    () =>\r\n      debounce(() => {\r\n        ref.current.factor = ref.current.step;\r\n      }, 25),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const onWheel = e => {\r\n      e.stopPropagation();\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n\r\n      const { value, step, min, max } = ref.current;\r\n      const newValue =\r\n        value + step * ref.current.factor * (e.deltaY < 0 ? 1 : -1);\r\n      onSetValue(Math.min(max, Math.max(min, newValue)));\r\n      ref.current.factor += step;\r\n      resetFactor();\r\n    };\r\n\r\n    elementRef.current.addEventListener('wheel', onWheel, { passive: false });\r\n\r\n    return () => {\r\n      if (elementRef.current)\r\n        elementRef.current.removeEventListener('wheel', onWheel, {\r\n          passive: false,\r\n        });\r\n    };\r\n  }, []);\r\n\r\n  return { elementRef };\r\n};\r\n\r\nconst useClickValueChanging = ({ max, min, onSetValue, value }) => {\r\n  const ref = React.useRef({\r\n    y: null,\r\n    mouseMovelistener: null,\r\n    mouseUplistener: null,\r\n    mouseDown: false,\r\n    value: value,\r\n  });\r\n  const [dragging, setDragging] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    ref.current.value = value;\r\n  }, [value]);\r\n\r\n  const handleMouseUp = React.useCallback(\r\n    e => {\r\n      if (e.button === 0) {\r\n        setDragging(false);\r\n        window.removeEventListener('mousemove', ref.current.mouseMovelistener);\r\n        window.removeEventListener('mouseup', ref.current.mouseUplistener);\r\n        ref.current.listener = null;\r\n      }\r\n    },\r\n    [setDragging]\r\n  );\r\n\r\n  const handleMouseMove = React.useCallback(\r\n    e => {\r\n      const newValue = Math.min(\r\n        max,\r\n        Math.max(min, ref.current.value + ref.current.y - e.pageY)\r\n      );\r\n      ref.current.y = e.pageY;\r\n      onSetValue(newValue);\r\n    },\r\n    [onSetValue, min, max]\r\n  );\r\n\r\n  const onMouseDown = React.useCallback(e => {\r\n    if (e.button === 0) {\r\n      setDragging(true);\r\n      ref.current.y = e.pageY;\r\n      //ref.current.mouseMovelistener = debounce(handleMouseMove, 10);\r\n      ref.current.mouseMovelistener = handleMouseMove;\r\n      ref.current.mouseUplistener = handleMouseUp;\r\n\r\n      window.addEventListener('mousemove', ref.current.mouseMovelistener);\r\n      window.addEventListener('mouseup', ref.current.mouseUplistener);\r\n    }\r\n  }, []);\r\n\r\n  return { dragging, onMouseDown };\r\n};\r\n\r\nconst RotaryKnob = props => {\r\n  const {\r\n    centerBased,\r\n    className,\r\n    displayValue,\r\n    max,\r\n    min,\r\n    style,\r\n    title,\r\n    value,\r\n  } = props;\r\n\r\n  const angle = React.useMemo(\r\n    () => convertToKnobAngle(value, min, max, centerBased),\r\n    [value, min, max]\r\n  );\r\n\r\n  const { onWheel, elementRef } = useWheelValueChanging(props);\r\n\r\n  const { dragging, onMouseDown } = useClickValueChanging(props);\r\n\r\n  return (\r\n    <div\r\n      className={`rotary-knob ${displayValue && 'with-value'} ${\r\n        title && 'with-title'\r\n      } ${className}`}\r\n      style={style}\r\n    >\r\n      {dragging && <div className=\"window-overlay\"></div>}\r\n      {title && <div className=\"title\">{title}</div>}\r\n      <div\r\n        className=\"knob-overlay\"\r\n        onMouseDown={onMouseDown}\r\n        ref={elementRef}\r\n      ></div>\r\n      <div className=\"knob-inner\">\r\n        <div\r\n          className=\"marker\"\r\n          style={{ transform: `rotate(${angle}deg)` }}\r\n        ></div>\r\n        <div className=\"ticks\">\r\n          {Array.from(Array(numOfTicks + 1)).map((_, idx) => (\r\n            <div key={idx} {...getTickProps(idx, angle, centerBased)}></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {displayValue && (\r\n        <div className=\"value-wrap\">\r\n          <div className=\"value-display\">{value}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RotaryKnob;\r\n","import React from 'react';\r\nimport RotaryKnob from './RotaryKnob';\r\n\r\nconst ParameterKnob = ({ name, onSetParameter, ...props }) => {\r\n  const handleValueChange = React.useCallback(\r\n    value => onSetParameter(name, value),\r\n    [name, onSetParameter]\r\n  );\r\n\r\n  return (\r\n    <div className=\"parameter-knob\">\r\n      <RotaryKnob displayValue onSetValue={handleValueChange} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParameterKnob;\r\n","import React from 'react';\r\nimport { Button, ParameterKnob } from 'components/KeyboardComponents';\r\nimport { Card } from 'antd';\r\nimport {\r\n  CaretRightOutlined,\r\n  PauseOutlined,\r\n  StepBackwardOutlined,\r\n} from '@ant-design/icons';\r\nimport { globalParameterData } from '../constants';\r\n\r\nexport const globalParametersArr = Object.keys(globalParameterData).map(\r\n  key => ({\r\n    ...globalParameterData[key],\r\n    name: key,\r\n  })\r\n);\r\n\r\nconst MidiSequencerGlobalControl = ({\r\n  onPlay,\r\n  onSeekToStart,\r\n  onSetParameter,\r\n  onStop,\r\n  parameters,\r\n}) => {\r\n  return (\r\n    <div className=\"global-controls\">\r\n      <Card bordered={false}>\r\n        <div className=\"control-row\">\r\n          <Button onClick={onSeekToStart}>\r\n            <StepBackwardOutlined />\r\n          </Button>\r\n          <Button onClick={onPlay}>\r\n            <CaretRightOutlined />\r\n          </Button>\r\n          <Button onClick={onStop}>\r\n            <PauseOutlined />\r\n          </Button>\r\n        </div>\r\n        <div className=\"control-row\">\r\n          {globalParametersArr.map(p => (\r\n            <ParameterKnob\r\n              {...p}\r\n              key={p.name}\r\n              onSetParameter={onSetParameter}\r\n              value={parameters[p.name]}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MidiSequencerGlobalControl;\r\n","import React from 'react';\r\nimport { Dropdown, Menu, Switch } from 'antd';\r\n\r\nconst MidiChannelsSelector = ({\r\n  channels,\r\n  numOfChannels,\r\n  onSetChannels,\r\n  title = 'Channels',\r\n}) => {\r\n  const [menuVisible, setMenuVisible] = React.useState(false);\r\n\r\n  const preventHide = React.useCallback(\r\n    () => setMenuVisible(true),\r\n    [setMenuVisible]\r\n  );\r\n\r\n  const handleSetChannels = React.useCallback(\r\n    (channelNum, checked) =>\r\n      onSetChannels(\r\n        checked\r\n          ? Array.from(new Set([...channels, channelNum])).sort((a, b) =>\r\n              a > b ? 1 : a < b ? -1 : 0\r\n            )\r\n          : channels.filter(ch => ch !== channelNum)\r\n      ),\r\n\r\n    [numOfChannels, onSetChannels, channels]\r\n  );\r\n\r\n  const menu = React.useMemo(\r\n    () => (\r\n      <Menu className=\"midi-channels-menu\" onClick={preventHide}>\r\n        {Array.from(Array(numOfChannels)).map((_, idx) => (\r\n          <Menu.Item key={idx + 1}>\r\n            <div className=\"menu-item\">\r\n              <div>{idx + 1} </div>\r\n              <Switch\r\n                checked={channels.includes(idx + 1)}\r\n                onChange={value => handleSetChannels(idx + 1, value)}\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    ),\r\n    [channels, numOfChannels]\r\n  );\r\n\r\n  const content = React.useMemo(() => {\r\n    if (!channels) return '';\r\n    const { range, other } = channels.reduce(\r\n      (obj, channel) => {\r\n        if (\r\n          obj.range.length > 0 &&\r\n          channel - obj.range[obj.range.length - 1] > 1\r\n        )\r\n          obj.other.push(channel);\r\n        else obj.range.push(channel);\r\n        return obj;\r\n      },\r\n      { range: [], other: [] }\r\n    );\r\n\r\n    return range.length > 1\r\n      ? `${range[0]}-${range[range.length - 1]}${other.length > 0 ? '..' : ''}`\r\n      : [...range, ...other].filter((_, idx) => idx < 3).join(',') +\r\n          (other.length > 2 ? '..' : '');\r\n  }, [channels]);\r\n\r\n  return (\r\n    <div className=\"numeric-parameter midi-channels\">\r\n      <Dropdown\r\n        onVisibleChange={setMenuVisible}\r\n        overlay={menu}\r\n        placement=\"bottomRight\"\r\n        visible={menuVisible}\r\n      >\r\n        <div>\r\n          <div className=\"title\">{title}</div>\r\n          <div className=\"content\">{content}</div>\r\n        </div>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MidiChannelsSelector;\r\n","import React from 'react';\r\nimport { InputNumber } from 'antd';\r\nimport { maxSequencerNotes } from '../constants';\r\nimport { createNote } from '../utils';\r\n\r\nconst SequenceLengthModifier = ({ notes, onChange }) => {\r\n  const handleChange = React.useCallback(\r\n    valueOrEvent => {\r\n      const value =\r\n        typeof valueOrEvent === 'number'\r\n          ? valueOrEvent\r\n          : Math.max(\r\n              1,\r\n              Math.min(maxSequencerNotes, parseInt(valueOrEvent.target?.value))\r\n            );\r\n\r\n      onChange(\r\n        value > notes.length\r\n          ? [\r\n              ...notes,\r\n              ...Array.from(Array(value - notes.length)).map(() =>\r\n                createNote()\r\n              ),\r\n            ]\r\n          : notes.slice(0, value)\r\n      );\r\n    },\r\n    [notes, onChange]\r\n  );\r\n\r\n  return (\r\n    <div className=\"sequence-length-modifier numeric-parameter\">\r\n      <div className=\"title\"># Pads</div>\r\n      <InputNumber\r\n        bordered={false}\r\n        max={maxSequencerNotes}\r\n        min={1}\r\n        onBlur={handleChange}\r\n        onPressEnter={handleChange}\r\n        onStep={handleChange}\r\n        defaultValue={notes?.length || 1}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SequenceLengthModifier;\r\n","import React from 'react';\r\nimport { Card, InputNumber } from 'antd';\r\nimport { Pad, ParameterKnob } from 'components/KeyboardComponents';\r\nimport MidiChannelsSelector from './MidiChannelsSelector';\r\nimport { sequencerParameterData } from '../constants';\r\nimport { usePadEvents, useParameters } from '../utils';\r\nimport { noteToString } from 'lib/utils';\r\nimport { numOfChannels } from 'lib/constants';\r\nimport SequenceLengthModifier from './SequenceLengthModifier';\r\n\r\nconst parametersArr = Object.keys(sequencerParameterData).map(key => ({\r\n  ...sequencerParameterData[key],\r\n  name: key,\r\n}));\r\n\r\nconst StepSequencer = ({ activeNoteIdx, data, onSetData }) => {\r\n  const { noteDuration, transpose } = data;\r\n\r\n  const parameterValues = React.useMemo(\r\n    () => ({ noteDuration, transpose }),\r\n    [noteDuration, transpose]\r\n  );\r\n\r\n  const { parameters, onSetParameter } = useParameters(\r\n    parametersArr,\r\n    parameterValues\r\n  );\r\n\r\n  React.useEffect(\r\n    () => onSetData(d => ({ ...d, ...parameters })),\r\n    [parameters]\r\n  );\r\n\r\n  const handleSequenceLengthChanged = React.useCallback(\r\n    notes =>\r\n      onSetData(currentData => ({\r\n        ...currentData,\r\n        notes,\r\n      })),\r\n    [onSetData]\r\n  );\r\n\r\n  const handleChannelsChange = React.useCallback(\r\n    channels =>\r\n      onSetData(currentData => ({\r\n        ...currentData,\r\n        channels,\r\n      })),\r\n    [onSetData]\r\n  );\r\n\r\n  const padEvents = usePadEvents(onSetData);\r\n\r\n  return (\r\n    <div className=\"step-sequencer\">\r\n      <div className=\"controls\">\r\n        <Card bordered={false}>\r\n          <SequenceLengthModifier\r\n            notes={data?.notes}\r\n            onChange={handleSequenceLengthChanged}\r\n          />\r\n          <MidiChannelsSelector\r\n            channels={data?.channels}\r\n            numOfChannels={numOfChannels}\r\n            onSetChannels={handleChannelsChange}\r\n            title=\"Channels\"\r\n          />\r\n          {parametersArr.map(p => (\r\n            <ParameterKnob\r\n              {...p}\r\n              key={p.name}\r\n              onSetParameter={onSetParameter}\r\n              value={parameters[p.name]}\r\n            />\r\n          ))}\r\n        </Card>\r\n      </div>\r\n      <div className=\"pads-container\">\r\n        {/* <div className=\"pads\"> */}\r\n        {Array.isArray(data?.notes) &&\r\n          data.notes.map(({ note, on }, idx) => (\r\n            <>\r\n              <Pad\r\n                active={activeNoteIdx === idx}\r\n                index={idx}\r\n                key={note}\r\n                on={on}\r\n                {...padEvents}\r\n              >\r\n                {noteToString(note)}\r\n              </Pad>\r\n              {(idx + 1) % 8 === 0 && <div className=\"flex-breaker\" />}\r\n            </>\r\n          ))}\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepSequencer;\r\n","import React from 'react';\r\nimport { defaultPattern } from './constants';\r\nimport { useNotesPlaying, useParameters } from './utils';\r\nimport GlobalControl, { globalParametersArr } from './GlobalControl';\r\nimport StepSequencer from './StepSequencer';\r\n\r\nconst MidiSequencer = () => {\r\n  const [stepSequencersData, setStepSequencersData] = React.useState(\r\n    defaultPattern.stepSequencers\r\n  );\r\n\r\n  const [activeSequencerIdx, setActiveSequencerIdx] = React.useState(0);\r\n  const onSetStepSequencerData = React.useCallback(\r\n    data => {\r\n      const dataGetter = typeof data === 'function' ? data : () => data;\r\n      setStepSequencersData(sequencers =>\r\n        sequencers.map((currentData, idx) =>\r\n          idx === activeSequencerIdx ? dataGetter(currentData) : currentData\r\n        )\r\n      );\r\n    },\r\n    [setStepSequencersData, activeSequencerIdx]\r\n  );\r\n\r\n  const { parameters, onSetParameter } = useParameters(globalParametersArr);\r\n\r\n  const { activeNoteIdx, ...globalControlEvents } = useNotesPlaying(\r\n    parameters,\r\n    stepSequencersData\r\n  );\r\n\r\n  return (\r\n    <div className=\"sequencer\">\r\n      <GlobalControl\r\n        {...globalControlEvents}\r\n        parameters={parameters}\r\n        onSetParameter={onSetParameter}\r\n      />\r\n      <div className=\"step-sequencer\">\r\n        <StepSequencer\r\n          activeNoteIdx={activeNoteIdx}\r\n          data={stepSequencersData[activeSequencerIdx]}\r\n          onSetData={onSetStepSequencerData}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MidiSequencer;\r\n"],"names":["noteToString","number","octave","Math","floor","notes","note","noteToMidi","str","match","parseInt","n","toUpperCase","isNoteOn","midiMessage","noteOnStart","numOfChannels","isNoteOff","noteOffStart","lawless","bpm","stepSequencers","channels","noteDuration","noteValue","theGrid","newMaps","velocity","metropolis","defaultNote","createParameter","min","max","defaultValue","title","centerBased","defaultPattern","pattern","map","stepSequencer","transpose","split","item","velocityStr","on","isNaN","formatPattern","tunes","sequencerParameterData","globalParameterData","getIntervalMillis","stepSequencerDataToSteps","stepSequencersData","Array","isArray","stepsLength","length","i","from","_","idx","duration","useParameters","parametersArr","parameterValues","React","reduce","obj","parameterData","name","parameters","setParameters","onSetParameter","value","curr","children","className","onClick","index","props","active","onWheel","handleClick","e","handleWheel","deltaY","minAngle","displayValue","style","angle","knobValue","maxAngle","convertToKnobAngle","onSetValue","step","ref","factor","elementRef","current","resetFactor","debounce","stopPropagation","stopImmediatePropagation","preventDefault","newValue","addEventListener","passive","removeEventListener","useWheelValueChanging","y","mouseMovelistener","mouseUplistener","mouseDown","dragging","setDragging","handleMouseUp","button","window","listener","handleMouseMove","pageY","onMouseDown","useClickValueChanging","transform","numOfTicks","tickIndex","tickAngle","key","getTickProps","handleValueChange","globalParametersArr","Object","keys","onPlay","onSeekToStart","onStop","bordered","StepBackwardOutlined","CaretRightOutlined","PauseOutlined","p","onSetChannels","menuVisible","setMenuVisible","preventHide","handleSetChannels","channelNum","checked","Set","sort","a","b","filter","ch","menu","includes","onChange","size","content","channel","range","other","push","join","onVisibleChange","overlay","placement","visible","handleChange","valueOrEvent","target","createNote","slice","onBlur","onPressEnter","onStep","activeNoteIdx","data","onSetData","d","setPadData","handleSequenceLengthChanged","currentData","handleChannelsChange","padEvents","padIndex","pd","direction","setStepSequencersData","activeSequencerIdx","onSetStepSequencerData","dataGetter","sequencers","autostart","midiContext","MidiContext","selectedOutput","setActiveNoteIdx","intervalId","intervalMillis","noteIdx","steps","tempoChangeRequested","forEach","playNote","clearInterval","setInterval","stepData","messages","MidiMessages","messagesOffGroups","message","send","messagesOff","setTimeout","messageOff","ready","useNotesPlaying","globalControlEvents","GlobalControl"],"sourceRoot":""}